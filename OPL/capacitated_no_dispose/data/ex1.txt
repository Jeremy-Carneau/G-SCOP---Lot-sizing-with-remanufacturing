IBM ILOG CPLEX Optimization Studio Community Edition.  The CPLEX Optimizers will solve problems up to 1000 variables and 1000 constraints.
Problem size limit exceeded.
CP Optimizer Community Edition solves problems with search spaces up to 2^1000.
Unrestricted version options (including academia) at https://ibm.co/2s0wqSa


<<< setup


<<< generate

Version identifier: 22.1.1.0 | 2022-11-26 | 9160aff4d
Tried aggregator 2 times.
MIP Presolve eliminated 6 rows and 5 columns.
MIP Presolve modified 1 coefficients.
Aggregator did 2 substitutions.
Reduced MIP has 145 rows, 176 columns, and 377 nonzeros.
Reduced MIP has 29 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,24 ticks)
Found incumbent of value 230794,000000 after 0,01 sec. (0,58 ticks)
Probing time = 0,00 sec. (0,13 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 145 rows, 176 columns, and 377 nonzeros.
Reduced MIP has 29 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,22 ticks)
Probing time = 0,00 sec. (0,13 ticks)
Clique table members: 1.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0,00 sec. (0,85 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                       230794,0000     6040,0000            97,38%
      0     0   100804,2563    29   230794,0000   100804,2563      214   56,32%
*     0+    0                       197942,7299   100804,2563            49,07%
*     0+    0                       120383,0000   100804,2563            16,26%
      0     0   105967,4257    20   120383,0000     Cuts: 136      266   11,97%
*     0+    0                       117798,0000   105967,4257            10,04%
      0     0   108031,1743    19   117798,0000      Cuts: 77      305    8,29%
*     0+    0                       112151,0000   108031,1743             3,67%
      0     0   108398,8606    16   112151,0000      Cuts: 34      323    3,35%
      0     0   108688,8047    15   112151,0000      Cuts: 27      337    3,09%
      0     0   108772,9095    17   112151,0000       Cuts: 6      343    3,01%
*     0+    0                       112017,0000   108772,9095             2,90%
Detecting symmetries...
      0     0   108825,7373    16   112017,0000      Cuts: 21      352    2,85%
      0     0   108839,6656    17   112017,0000      Cuts: 10      356    2,84%
      0     0   108859,1779    18   112017,0000       Cuts: 4      362    2,82%
      0     0   108861,1381    18   112017,0000    MIRcuts: 1      365    2,82%
*     0+    0                       110818,0000   108861,1381             1,77%
Detecting symmetries...
      0     2   108861,1381    18   110818,0000   108883,3706      365    1,75%
Elapsed time = 0,11 sec. (23,17 ticks, tree = 0,02 MB, solutions = 7)
*     9+    3                       110371,0000   108885,3039             1,35%

Clique cuts applied:  1
Implied bound cuts applied:  15
Flow cuts applied:  7
Mixed integer rounding cuts applied:  35
Flow path cuts applied:  13
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0,11 sec. (23,06 ticks)
Parallel b&c, 8 threads:
  Real time             =    0,03 sec. (11,90 ticks)
  Sync time (average)   =    0,01 sec.
  Wait time (average)   =    0,00 sec.
                          ------------
Total (root+branch&cut) =    0,14 sec. (34,97 ticks)

<<< solve


OBJECTIVE: 110371
Post-traitement: 
La valeur de l'objectif est de 110371
DonnÃ©es :
Dn =  [13 10 15 15 12 19 21 21 20 15 12 11 19 17 13 12 10 11 13 21 14 8 22 13 9 12
     12 21 14 11]
Ds =  [11 5 13 13 10 14 10 15 9 7 14 9 9 7 9 6 14 13 12 6 11 14 13 12 5 7 8 10 13
     6]
T = 30
R =  [18 22 18 23 17 15 22 21 17 23 22 22 24 23 17 19 20 19 21 19 18 21 18 24 21
     20 18 22 17 24]
xn =  [23 0 37 0 45 0 0 41 0 42 0 0 45 0 0 23 0 45 0 0 45 0 0 45 0 0 0 45 0 0]
xs =  [16 0 30 0 30 0 0 24 0 30 0 0 26 0 0 30 0 30 0 0 30 0 0 30 0 0 0 29 0 0]
sn =  [0 10 0 22 7 40 21 0 20 0 27 15 4 30 13 0 11 1 35 22 1 32 24 2 34 25 13 1 25
     11 0]
ss =  [0 5 0 17 4 24 10 0 9 0 23 9 0 17 10 1 25 11 28 16 10 29 15 2 20 15 8 0 19
     6 0]
sr =  [0 2 24 12 35 22 37 59 56 73 66 88 110 108 131 148 137 157 146 167 186 174
     195 213 207 228 248 266 259 276 300]

<<< post process


<<< done

