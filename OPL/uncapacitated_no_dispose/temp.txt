IBM ILOG CPLEX Optimization Studio Community Edition.  The CPLEX Optimizers will solve problems up to 1000 variables and 1000 constraints.
Problem size limit exceeded.
CP Optimizer Community Edition solves problems with search spaces up to 2^1000.
Unrestricted version options (including academia) at https://ibm.co/2s0wqSa


<<< setup


<<< generate

Version identifier: 22.1.1.0 | 2022-11-26 | 9160aff4d
Tried aggregator 3 times.
MIP Presolve eliminated 4 rows and 9 columns.
Aggregator did 8 substitutions.
Reduced MIP has 111 rows, 166 columns, and 330 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,45 ticks)
Found incumbent of value 241853,000000 after 0,01 sec. (0,83 ticks)
Probing time = 0,00 sec. (0,11 ticks)
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 111 rows, 166 columns, and 330 nonzeros.
Reduced MIP has 26 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,20 ticks)
Probing time = 0,00 sec. (0,10 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 8 threads.
Root relaxation solution time = 0,00 sec. (0,50 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                       241853,0000    10740,0000            95,56%
      0     0    62909,4327    26   241853,0000    62909,4327      150   73,99%
*     0+    0                       113352,0000    62909,4327            44,50%
      0     0    69637,2518    25   113352,0000     Cuts: 128      205   38,57%
      0     0    76468,1015    25   113352,0000     Cuts: 127      270   32,54%
      0     0    81117,4893    23   113352,0000     Cuts: 127      327   28,44%
      0     0    82751,4768    24   113352,0000      Cuts: 67      366   27,00%
*     0+    0                        84363,0000    82751,4768             1,91%
      0     0    83298,8730    16    84363,0000      Cuts: 62      393    1,26%
Detecting symmetries...
      0     0    83348,0116    15    84363,0000      Cuts: 30      406    1,20%
      0     0    83419,2254    18    84363,0000      Cuts: 38      415    1,12%
*     0+    0                        83602,0000    83419,2254             0,22%
      0     0    83477,1034     8    83602,0000      Cuts: 33      431    0,15%
*     0+    0                        83576,0000    83477,1034             0,12%
      0     0    83515,6986     8    83576,0000       Cuts: 7      436    0,07%
      0     0    83520,0382     9    83576,0000       Cuts: 5      443    0,07%
      0     0    83520,5181     5    83576,0000       Cuts: 5      444    0,07%
Detecting symmetries...
      0     1    83523,2081     7    83576,0000    83520,5181      444    0,07%
Elapsed time = 0,16 sec. (25,08 ticks, tree = 0,02 MB, solutions = 5)

Implied bound cuts applied:  6
Flow cuts applied:  36
Mixed integer rounding cuts applied:  50
Flow path cuts applied:  30
Multi commodity flow cuts applied:  1
Gomory fractional cuts applied:  1

Root node processing (before b&c):
  Real time             =    0,16 sec. (24,96 ticks)
Parallel b&c, 8 threads:
  Real time             =    0,01 sec. (0,27 ticks)
  Sync time (average)   =    0,01 sec.
  Wait time (average)   =    0,00 sec.
                          ------------
Total (root+branch&cut) =    0,17 sec. (25,24 ticks)

<<< solve


OBJECTIVE: 83576
Post-traitement: 
La valeur de l'objectif est de 83576
DonnÃ©es :
Dn =  [18 19 8 14 16 9 10 17 21 17 14 17 14 22 20 14 8 21 17 16 10 10 16 22 13 13
     16 21 21 18]
Ds =  [12 13 14 11 14 5 11 11 10 14 10 15 14 9 6 11 11 5 11 11 12 15 10 13 11 6 7
     9 14 15]
T = 30
R =  [13 12 22 27 19 18 25 20 12 26 19 23 23 19 17 18 23 25 20 12 23 13 22 19 13
     15 16 26 25 25]
xn =  [18 19 8 39 0 0 65 0 0 0 45 0 0 64 0 0 0 74 0 0 0 2.5935e-13 64 0 2.1316e-13
     0 76 0 0 0]
xs =  [12 13 14 30 0 0 46 0 0 0 39 0 0 37 0 0 0 54 0 0 0 0 40 0 0 0 45 0 0 0]
sn =  [0 0 0 0 25 9 0 55 38 17 0 31 14 0 42 22 8 0 53 36 20 10 0 48 26 13 0 60 39
     18 0]
ss =  [0 -3.5527e-15 0 0 19 5 0 35 24 14 0 29 14 0 28 22 11 0 49 38 27 15 0 30 17
     6 0 38 29 15 0]
sr =  [0 1 0 8 5 24 42 21 41 53 79 59 82 105 87 104 122 145 116 136 148 171 184 166
     185 198 213 184 210 235 260]

<<< post process


<<< done

